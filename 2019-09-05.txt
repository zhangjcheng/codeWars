Description:
In this little assignment you are given a string of space separated numbers, and have to return the highest and lowest number.
Example:
highAndLow("1 2 3 4 5")  // return "5 1"
highAndLow("1 2 -3 4 5") // return "5 -3"
highAndLow("1 9 3 4 -5") // return "9 -5"
Notes:
All numbers are valid Int32, no need to validate them.
There will always be at least one number in the input string.
Output string must be two numbers separated by a single space, and highest number is first.

Transform:
设计一个方法传入一个空格分隔的数字字符串返回最低和最高的数字以空格分隔

Solution:
public class Kata {
  public static String highAndLow(String numbers) {
        // Code here or
        String[] strArray = numbers.split("\\s");
        String[] str = getMaxAndMin(strArray);
        return str[0] + " " + str[1];
    }

    private static String[] getMaxAndMin(String[] strArray){
        String[] str = new String[2];
        str[0] = "";
        str[1] = "";
        for (int i = 0; i < strArray.length; i ++) {
            if ((str[0]).equals("")
                    || (Integer.parseInt(strArray[i]) > Integer.parseInt(str[0]))
                    ) {
                str[0] = strArray[i];
            }

            if ((str[1]).equals("")
                    || Integer.parseInt(strArray[i]) < Integer.parseInt(str[1])) {
                str[1] = strArray[i];
            }
        }
        return str;
    }
}

Sample Tests:
import org.junit.Test;

import static junit.framework.TestCase.fail;
import static org.junit.Assert.*;

public class KataTest {
  @Test
  public void test1() {
    assertEquals("42 -9", Kata.highAndLow("8 3 -5 42 -1 0 0 -9 4 7 4 -4"));
  }
}