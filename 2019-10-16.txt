Description:
You are given a node that is the beginning of a linked list. This list always contains a tail and a loop.

Your objective is to determine the length of the loop.

For example in the following picture the tail's size is 3 and the loop size is 11.


Transform:
设计一个方法传入链表，返回链表尾部大小和循环大小;

考察内容：
基本语言能力、链表概念及操作。

Solution:
package com.newretail.vendor.feign;

/**
 * @author zhangjincheng
 * @ClassName TimeFormatter
 * @Description 时间长度转换
 * @createDate 2019/11/4
 * @updatePerson
 * @updateDate
 */
public class TimeFormatter {

    public static String formatDuration(int seconds) {

        if (seconds == 0) {
            return "now";
        }
        // your code goes here
        int yearsBase = 60 * 60 * 24 * 365;
        int daysBase = 60 * 60 * 24;
        int hoursBase = 60 * 60;
        int minutesBase = 60;

        int years = seconds / yearsBase;
        seconds -= years * yearsBase;

        int days = seconds / daysBase;
        seconds -= days * daysBase;

        int hours = seconds / hoursBase;
        seconds -= hours * hoursBase;

        int minute = seconds / minutesBase;
        seconds -= minute * minutesBase;

        return (years == 0 ? "" : (years + " year,"))
                + (days == 0 ? "" : (days + " day,"))
                + (hours == 0 ? "" : (hours + " hour,"))
                + (minute == 0 ? "" : (minute + " minute,"))
                + (seconds == 0 ? "" : (seconds + " second"));
    }

    public static void main(String[] args) {
        System.out.println(formatDuration(1));
        System.out.println(formatDuration(62));
        System.out.println(formatDuration(120));
        System.out.println(formatDuration(3600));
        System.out.println(formatDuration(3662));
    }
}


Sample Tests:
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class LoopTest {

  @Test public void loop_size_of_3() {
    Node list = Node.createChain(1, 3);
    int result = new LoopInspector().loopSize(list);
    assertEquals("Incorrect loop size", 3, result);
  }
  
  @Test public void loop_size_of_29() {
    Node list = Node.createChain(21, 29);
    int result = new LoopInspector().loopSize(list);
    assertEquals("Incorrect loop size", 29, result);
  }
  
  @Test public void loop_size_of_1087() {
    Node list = Node.createChain(3904, 1087);
    int result = new LoopInspector().loopSize(list);
    assertEquals("Incorrect loop size", 1087, result);
  }
  
}



最佳实践：

同上