Description:
You are going to be given a word. 
Your job is to return the middle character of the word. 
If the word's length is odd, return the middle character. 
If the word's length is even, return the middle 2 characters.


Example：
Kata.getMiddle("test") should return "es"

Kata.getMiddle("testing") should return "t"

Kata.getMiddle("middle") should return "dd"

Kata.getMiddle("A") should return "A"

Transform:
设计一个方法传入一个字符串，返回中间的一个或两个字符串

考察内容：
字符串截取操作、基本语言能力

Solution:
package com.newretail.vendor.constant;

/**
 * @author zhangjincheng
 * @ClassName Middle
 * @Description 获取中间字符串
 * @createDate 2019/9/30
 * @updatePerson
 * @updateDate
 */
public class Middle {

    public static String getMiddle(String word) {
        int i = word.length();
        Double mid = (i/2D);
        int midStart = mid.intValue();
        return word.substring(midStart == mid ? midStart - 1 : midStart, midStart + 1);
    }

    public static void main(String[] args) {
        System.out.println(getMiddle("teting"));
    }
}



Sample Tests:
import org.junit.Test;
import static org.junit.Assert.assertEquals;

public class MiddleExampleTests {
  @Test
  public void evenTests() {
    assertEquals("es", Kata.getMiddle("test"));
    assertEquals("dd", Kata.getMiddle("middle"));
  }
  
  @Test
  public void oddTests() {
    assertEquals("t", Kata.getMiddle("testing"));
    assertEquals("A", Kata.getMiddle("A"));
  }
}

最佳实践：

class Middle {
    public static String getMiddle(String word) {
        int length = word.length();
        return (length % 2 != 0) ?  String.valueOf(word.charAt(length / 2)) : word.substring(length / 2 - 1, length / 2 + 1);
    }
}