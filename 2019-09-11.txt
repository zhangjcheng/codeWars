Description:
This program tests the life of an evaporator containing a gas.

We know the content of the evaporator (content in ml), the percentage of foam or gas lost every day (evap_per_day) and the threshold (threshold) in percentage beyond which the evaporator is no longer useful. All numbers are strictly positive.

The program reports the nth day (as an integer) on which the evaporator will be out of use.

Note : Content is in fact not necessary in the body of the function "evaporator", you can use it or not use it, as you wish. Some people might prefer to reason with content, some other with percentages only. It's up to you but you must keep it as a parameter because the tests have it as an argument.

Examples：
assertEquals(22 , Evaporator.evaporator(10, 10, 10));

Transform:
设计一个方法传入蒸发率和阈值输出使用多少次后将不能使用

考察内容：
概率可达性分析、方程计算、基本语言能力

Solution:
package com.newretail.vendor.constant;

/**
 * @author zhangjincheng
 * @ClassName Evaporator
 * @Description 蒸发与阈值分析
 * @createDate 2019/9/30
 * @updatePerson
 * @updateDate
 */
public class Evaporator {

    public static int evaporator(double content, double evap_per_day, double threshold) {
        if (evap_per_day < 0D || threshold < 0D) {
            return 0;
        }

        double currentRate = 1D;
        int currentTime = 0;
        evap_per_day = evap_per_day / 100;
        threshold = threshold / 100;
        while (true) {
            if (currentRate <= threshold) {
                break;
            } else {
                currentRate = (currentRate - (currentRate * evap_per_day));
                currentTime ++;
            }
        }
        return currentTime;
    }
}


Sample Tests:
import static org.junit.Assert.*;
import org.junit.*;

public class EvaporatorTest { 
    @Test
    public void testEvaporatorOne() {
        assertEquals(22 , Evaporator.evaporator(10, 10, 10));     
    }
}

最佳实践：
public class Evaporator { 
  
  public static int evaporator(double content, double evap_per_day, double threshold) {
  
    int nbOfDays = 0;
    double contentPercentage = 100;
    
    while(contentPercentage > threshold){
      contentPercentage *=  1- evap_per_day/100;
      nbOfDays ++;
    }

  
    return nbOfDays;
  }
}
