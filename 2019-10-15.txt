Description:
Your task in order to complete this Kata is to write a function which formats a duration, given as a number of seconds, in a human-friendly way.

The function must accept a non-negative integer. If it is zero, it just returns "now". Otherwise, the duration is expressed as a combination of years, days, hours, minutes and seconds.

It is much easier to understand with an example:

TimeFormatter.formatDuration(62)   //returns "1 minute and 2 seconds"
TimeFormatter.formatDuration(3662) //returns "1 hour, 1 minute and 2 seconds"
For the purpose of this Kata, a year is 365 days and a day is 24 hours.

Note that spaces are important.

Detailed rules
The resulting expression is made of components like 4 seconds, 1 year, etc. In general, a positive integer and one of the valid units of time, separated by a space. The unit of time is used in plural if the integer is greater than 1.

The components are separated by a comma and a space (", "). Except the last component, which is separated by " and ", just like it would be written in English.

A more significant units of time will occur before than a least significant one. Therefore, 1 second and 1 year is not correct, but 1 year and 1 second is.

Different components have different unit of times. So there is not repeated units like in 5 seconds and 1 second.

A component will not appear at all if its value happens to be zero. Hence, 1 minute and 0 seconds is not valid, but it should be just 1 minute.

A unit of time must be used "as much as possible". It means that the function should not return 61 seconds, but 1 minute and 1 second instead. Formally, the duration specified by of a component must not be greater than any valid more significant unit of time.


Transform:
设计一个方法传入秒数返回对应的时间长度;

考察内容：
基本语言能力、时间转换。

Solution:
package com.newretail.vendor.feign;

/**
 * @author zhangjincheng
 * @ClassName TimeFormatter
 * @Description 时间长度转换
 * @createDate 2019/11/4
 * @updatePerson
 * @updateDate
 */
public class TimeFormatter {

    public static String formatDuration(int seconds) {

        if (seconds == 0) {
            return "now";
        }
        // your code goes here
        int yearsBase = 60 * 60 * 24 * 365;
        int daysBase = 60 * 60 * 24;
        int hoursBase = 60 * 60;
        int minutesBase = 60;

        int years = seconds / yearsBase;
        seconds -= years * yearsBase;

        int days = seconds / daysBase;
        seconds -= days * daysBase;

        int hours = seconds / hoursBase;
        seconds -= hours * hoursBase;

        int minute = seconds / minutesBase;
        seconds -= minute * minutesBase;

        return (years == 0 ? "" : (years + " year,"))
                + (days == 0 ? "" : (days + " day,"))
                + (hours == 0 ? "" : (hours + " hour,"))
                + (minute == 0 ? "" : (minute + " minute,"))
                + (seconds == 0 ? "" : (seconds + " second"));
    }

    public static void main(String[] args) {
        System.out.println(formatDuration(1));
        System.out.println(formatDuration(62));
        System.out.println(formatDuration(120));
        System.out.println(formatDuration(3600));
        System.out.println(formatDuration(3662));
    }
}


Sample Tests:
import org.junit.Test;
import static org.junit.Assert.*;

public class TimeFormatterTest {
    @Test
    public void exampleTests() {
        assertEquals("1 second", TimeFormatter.formatDuration(1));
        assertEquals("1 minute and 2 seconds", TimeFormatter.formatDuration(62));
        assertEquals("2 minutes", TimeFormatter.formatDuration(120));
        assertEquals("1 hour", TimeFormatter.formatDuration(3600));
        assertEquals("1 hour, 1 minute and 2 seconds", TimeFormatter.formatDuration(3662));
    }
}



最佳实践：

同上