Description:
We want to generate a function that computes the series starting from 0 and ending until the given number following the sequence:

0 1 3 6 10 15 21 28 36 45 55 ....

which is created by

0, 0+1, 0+1+2, 0+1+2+3, 0+1+2+3+4, 0+1+2+3+4+5, 0+1+2+3+4+5+6, 0+1+2+3+4+5+6+7 etc..

Input:

LastNumber

Output:

series and result


Example：
assertEquals("0+1+2+3+4+5+6 = 21",SequenceSum.showSequence(6));

Transform:
设计一个方法传入一个整数 求这个整数及之前的所有整数和

考察内容：
累加、基本语言能力

Solution:
package com.newretail.vendor.constant;

/**
 * @author zhangjincheng
 * @ClassName SequenceSum
 * @Description 序列累加表达式
 * @createDate 2019/9/30
 * @updatePerson
 * @updateDate
 */
public class SequenceSum {
    public static String showSequence(int value){
		if (value == 0) return value + "=0";
		if (value < 0) return value + "<0";
        StringBuilder sb = new StringBuilder();
        int result = 0;
        for (int i = 0; i <= value; i++) {
            if (i > 0) {
                sb.append("+");
            }
            result += i;
            sb.append(i);
        }
        return sb.append(" = ").append(result).toString();
    }
}




Sample Tests:
import org.junit.Test;
import static org.junit.Assert.assertEquals;
import org.junit.runners.JUnit4;


public class SequenceSumTest {
    @Test
    public void testBasic() { 
      assertEquals("0+1+2+3+4+5+6 = 21",SequenceSum.showSequence(6));
    }
}

最佳实践：

同上